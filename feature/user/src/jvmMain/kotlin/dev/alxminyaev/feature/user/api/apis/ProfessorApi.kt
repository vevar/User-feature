/**
 * User service
 * User service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: alxminyaev@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package dev.alxminyaev.feature.user.api.apis


import com.google.gson.Gson
import dev.alxminyaev.feature.user.api.Paths
import io.ktor.application.*
import io.ktor.http.*
import io.ktor.locations.*
import io.ktor.response.*
import io.ktor.routing.*

@KtorExperimentalLocationsAPI
fun Route.ProfessorApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    get<Paths.getProfessorById> { _: Paths.getProfessorById ->
        val exampleContentType = "application/json"
        val exampleContentString = """{
          "user" : {
            "roles" : [ 6, 6 ],
            "profile" : {
              "firstName" : "firstName",
              "lastName" : "lastName",
              "middleName" : "middleName"
            },
            "id" : 0
          }
        }"""

        when (exampleContentType) {
            "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
            "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
            else -> call.respondText(exampleContentString)
        }

    }


    route("/api/v1/professor/{id}") {
        put {
            call.respond(HttpStatusCode.NotImplemented)

        }
    }

}
